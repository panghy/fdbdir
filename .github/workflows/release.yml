name: Release (cargo-dist)

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  plan:
    runs-on: ubuntu-latest
    outputs:
      dist-version: ${{ steps.plan.outputs.dist-version }}
      tasks: ${{ steps.plan.outputs.tasks }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      - name: Install cargo-dist (prebuilt)
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-dist
      - name: Ensure cargo-dist available
        run: |
          echo "PATH=$PATH"
          CARGO_BIN_DIR="${CARGO_HOME:-$HOME/.cargo}/bin"
          CARGO_DIST="$CARGO_BIN_DIR/cargo-dist"
          if ! command -v cargo-dist >/dev/null 2>&1 && [ ! -x "$CARGO_DIST" ]; then
            echo "cargo-dist not found; installing via cargo --force";
            cargo install cargo-dist --force --locked;
          fi
          if [ ! -x "$CARGO_DIST" ]; then
            # Fallback to whatever is on PATH (if any)
            CARGO_DIST="$(command -v cargo-dist || true)"
          fi
          echo "CARGO_DIST=$CARGO_DIST" >> $GITHUB_ENV
          "$CARGO_DIST" --version
      - id: plan
        run: |
          ${{ env.CARGO_DIST }} plan --tag ${{ github.ref_name }} --output-format json > dist-plan.json
          echo "dist-version=$(jq -r .dist_version dist-plan.json)" >> $GITHUB_OUTPUT
          echo "tasks=$(jq -c .tasks dist-plan.json)" >> $GITHUB_OUTPUT

  build:
    needs: plan
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-13
            target: x86_64-apple-darwin
          - os: macos-14
            target: aarch64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install build deps (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang llvm-dev libclang-dev pkg-config
      - name: Install cargo-dist (prebuilt)
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-dist@${{ needs.plan.outputs.dist-version }}
      - name: Ensure cargo-dist available
        run: |
          CARGO_BIN_DIR="${CARGO_HOME:-$HOME/.cargo}/bin"
          CARGO_DIST="$CARGO_BIN_DIR/cargo-dist"
          if ! command -v cargo-dist >/dev/null 2>&1 && [ ! -x "$CARGO_DIST" ]; then
            cargo install cargo-dist --force --locked;
          fi
          if [ ! -x "$CARGO_DIST" ]; then CARGO_DIST="$(command -v cargo-dist || true)"; fi
          echo "CARGO_DIST=$CARGO_DIST" >> $GITHUB_ENV
          "$CARGO_DIST" --version
      - name: Build Artifacts
        run: |
          ${{ env.CARGO_DIST }} build --target ${{ matrix.target }} --tag ${{ github.ref_name }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ matrix.target }}
          path: target/distrib/*

  upload:
    needs: [plan, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-dist@${{ needs.plan.outputs.dist-version }}
      - name: Ensure cargo-dist available
        run: |
          CARGO_BIN_DIR="${CARGO_HOME:-$HOME/.cargo}/bin"
          CARGO_DIST="$CARGO_BIN_DIR/cargo-dist"
          if ! command -v cargo-dist >/dev/null 2>&1 && [ ! -x "$CARGO_DIST" ]; then
            cargo install cargo-dist --force --locked;
          fi
          if [ ! -x "$CARGO_DIST" ]; then CARGO_DIST="$(command -v cargo-dist || true)"; fi
          echo "CARGO_DIST=$CARGO_DIST" >> $GITHUB_ENV
          "$CARGO_DIST" --version
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts-*
          merge-multiple: true
      - name: Upload to Release
        env:
          # GitHub-provided token for this repo
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          ${{ env.CARGO_DIST }} upload --tag ${{ github.ref_name }} target/distrib/*

  publish-tap:
    needs: [plan, upload]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-dist@${{ needs.plan.outputs.dist-version }}
      - name: Ensure cargo-dist available
        run: |
          CARGO_BIN_DIR="${CARGO_HOME:-$HOME/.cargo}/bin"
          CARGO_DIST="$CARGO_BIN_DIR/cargo-dist"
          if ! command -v cargo-dist >/dev/null 2>&1 && [ ! -x "$CARGO_DIST" ]; then
            cargo install cargo-dist --force --locked;
          fi
          if [ ! -x "$CARGO_DIST" ]; then CARGO_DIST="$(command -v cargo-dist || true)"; fi
          echo "CARGO_DIST=$CARGO_DIST" >> $GITHUB_ENV
          "$CARGO_DIST" --version
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts-*
          merge-multiple: true
      - name: Publish Homebrew Tap PR
        env:
          # Default repo token (works if tap is same owner and permissions suffice)
          GITHUB_TOKEN: ${{ github.token }}
          # Optional PAT for cross-repo write; if present will override GITHUB_TOKEN below.
          TAP_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
        run: |
          # Prefer TAP_TOKEN if provided
          if [ -n "${TAP_TOKEN}" ]; then export GITHUB_TOKEN="${TAP_TOKEN}"; fi
          ${{ env.CARGO_DIST }} publish --installer homebrew --tag ${{ github.ref_name }}
